global:
  checkNewVersion: {{ traefik_check_new_version | lower }}
  sendAnonymousUsage: {{ traefik_send_anonymous_usage | lower }}

serversTransport:
  insecureSkipVerify: {{ traefik_insecure_skip_verify | lower }}
  rootCAs: {{ traefik_root_certificates | to_yaml | trim }}
  maxIdleConnsPerHost: {{ traefik_max_idle_conns }}
  forwardingTimeouts:
    dialTimeout: {{ traefik_forwarding_dial_timeout }}
    responseHeaderTimeout: {{ traefik_forwarding_response_timeout }}
    idleConnTimeout: {{ traefik_forwarding_idle_timeout }}

log:
  level: {{ traefik_log_level }}
  format: {{ traefik_log_format }}

accessLog:
  format: {{ traefik_accesslog_format }}
  bufferingSize: {{ traefik_accesslog_buffer }}

entryPoints:
{% for item in traefik_standard_entrypoints + traefik_additional_entrypoints %}
  {{ item.name }}:
    address: {{ item.address }}
    transport:
      lifeCycle:
        requestAcceptGraceTimeout: {{ item.request_accept_grace_timeout | default(0) }}
        graceTimeOut: {{ item.grace_timeout | default(10) }}
      respondingTimeouts:
        readTimeout: {{ item.read_timeout | default(0) }}
        writeTimeout: {{ item.write_timeout | default(0) }}
        idleTimeout: {{ item.idle_timeout | default(180) }}
{% if item.proxy_protocol | default(False) %}

    proxyProtocol:
      insecure: {{ item.proxy_protocol.insecure | default(True) | lower }}
      trustedIPs: {{ item.proxy_protocol.trusted_ips | to_yaml | trim }}
{% endif %}
{% if item.forwarded_headers | default(False) %}

    forwardedHeaders:
      insecure: {{ item.forwarded_headers.insecure | default(True) | lower }}
      trustedIPs: {{ item.forwarded_headers.trusted_ips | to_yaml | trim }}
{% endif %}
{% endfor %}

providers:
  providersThrottleDuration: {{ traefik_provider_throttle_duration }}

  docker:
    endpoint: unix:///var/run/docker.sock
    watch: true
    exposedByDefault: {{ traefik_docker_exposed_by_default | lower }}
    useBindPortIP: {{ traefik_docker_bind_port_ip | lower }}
{% if traefik_docker_network_name | default(False) %}
    network: {{ traefik_docker_network_name }}
{% endif %}
    defaultRule: {{ traefik_docker_default_rule }}

  file:
    filename: /etc/traefik/static.yml
    watch: true
{% if traefik_api_enabled %}

api:
  insecure: {{ traefik_api_insecure | lower }}
  dashboard: {{ traefik_api_dashboard | lower }}
  debug: {{ traefik_api_debug | lower }}
{% endif %}
{% if traefik_prometheus_enabled %}

{% if traefik_ping_entrypoint | default(False) %}
ping:
  entryPoint: {{ traefik_ping_entrypoint }}
{% else %}
ping: {}
{% endif %}

metrics:
  prometheus:
{% if traefik_prometheus_entrypoint | default(False) %}
    entryPoint: {{ traefik_prometheus_entrypoint }}
{% endif %}
    buckets: {{ traefik_prometheus_buckets | to_yaml | trim }}
    addEntryPointsLabels: {{ traefik_prometheus_entrypoint_labels | lower }}
    addServicesLabels: {{ traefik_prometheus_service_labels | lower }}
{% endif %}
{% if traefik_tracing_enabled %}

tracing:
  serviceName: {{ traefik_tracing_service_name }}
  spanNameLimit: {{ traefik_tracing_name_limit }}

  jaeger:
    samplingServerURL: {{ traefik_tracing_sampling_server }}
    samplingType: {{ traefik_tracing_sampling_type }}
    samplingParam: {{ traefik_tracing_sampling_param }}
    localAgentHostPort: {{ traefik_tracing_local_agent }}
    gen128Bit: {{ traefik_tracing_128bit_spans | lower }}
    propagation: {{ traefik_tracing_propagation_format }}
    traceContextHeaderName: {{ traefik_tracing_header_name }}
    collector:
      endpoint: {{ traefik_tracing_collector_endpoint }}
      user: {{ traefik_tracing_collector_user }}
      password: {{ traefik_tracing_collector_password }}
{% endif %}
{% if traefik_cert_resolvers | default(False) %}

certificatesResolvers:
{% for item in traefik_cert_resolvers %}
  {{ item.name }}:
    acme:
      email: {{ item.email }}
      caServer: {{ item.server | default("https://acme-v02.api.letsencrypt.org/directory") }}
      storage: {{ item.storage | default("/etc/traefik/acme.json") }}
      keyType: {{ item.key_type | default("RSA4096") }}
{% if item.dns_challenge | default(False) %}
      dnsChallenge:
        provider: {{ item.dns_challenge.provider }}
        delayBeforeCheck: {{ item.dns_challenge.delay | default(0) }}
        disablePropagationCheck: false
        resolvers: {{ item.dns_challenge.resolvers | default([]) | to_yaml | trim }}
{% endif %}
{% if item.http_challenge | default(False) %}
      httpChallenge:
        entryPoint: {{ item.http_challenge.entrypoint }}
{% endif %}
{% if item.tls_challenge | default(False) %}
      tlsChallenge: {}
{% endif %}
{% endfor %}
{% endif %}

hostResolver:
  cnameFlattening: {{ traefik_hostresolver_cname_flattening | lower }}
  resolvConfig: {{ traefik_hostresolver_resolv_config }}
  resolvDepth: {{ traefik_hostresolver_resolv_depth }}
